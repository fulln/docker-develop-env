version: '3'
services:      
  db:
    image: 'mysql/mysql-server:5.7'
    restart: always       
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: "qq1203943228"   
    networks:
      - net-spring-db                  
    user: root   
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/my.cnf:/etc/my.cnf  
      - ./mysql/sql:/docker-entrypoint-initdb.d/
    ports: 
      - "3306:3306"  
  redis:
    restart: always
    image: redis:4.0.9
    container_name: redis            
    command: redis-server --requirepass "ZV5ut2FNPp/5iqE1l5feIg=="     
    networks:
      - net-spring-db     
    volumes:
      -  ./redis/redis.conf:/etc/redis/redis.conf 
      -  ./redis/data:/data 
    ports: 
      - "6379:6379"
  rabbitmq:
    image: 'rabbitmq:management'
    container_name: rabbitmq
    ports:
     - "15672:15672"
     - "5671-5672:5671-5672"
    environment: 
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
     - '2181:2181' 
    volumes:
     - /etc/localtime:/etc/localtime:ro # 修改容器时区为东8区 
     - ./zk/conf/zoo.cfg:/opt/zookeeper-3.4.9/conf/zoo.cfg
     - ./zk/data:/opt/zookeeper-3.4.9/data
     - ./zk/log:/opt/zookeeper-3.4.9/logs
     - ./zk/zkServer.sh:/opt/zookeeper-3.4.9/bin/zkServer.sh    --privileged=true 
    networks: 
     - net-spring-db    
  mongo:
    container_name: mongo         
    image: mongo
    ports:
      - "27017:27017"          
    environment:
        - MONGO_INITDB_ROOT_USERNAME=fulln
        - MONGO_INITDB_ROOT_PASSWORD=mongo2451
    volumes: 
      - /etc/localtime:/etc/localtime:ro    
      - ./mongo/config/:/data/configdb
      - ./mongo/db/:/data/db
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: unless-stopped
    networks:
      - net-spring-db
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
    ports:
      - 80:80
      - 443:443       
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es
    environment:
      - discovery.type=single-node    
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /etc/localtime:/etc/localtime:ro # 修改容器时区为东8区 
      - ./es/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml     
      - ./es/data:/usr/share/elasticsearch/data
      - ./es/backup:/usr/share/elasticsearch/backup  
    ports:
      - 9200:9200
    networks:
      - net-spring-db
  kibana: 
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana
    environment: 
      - ELASTICSEARCH_HOSTS=http://es:9200
    volumes:
      - ./kibana/data:/usr/share/kibana/data      
        #   - ./kibana/conf:/usr/share/kibana/config   
    ports:
      - 5601:5601
    networks:
      - net-spring-db 
  consul:
          image: consul:latest
          container_name: consul
          ports: 
                - 8500:8500
                - 8300:8300
                - 8600:8600  
          volumes:     
                 - ./consul/data/:/usr/share/consul/data     
          environment:
                - CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt":true}
                  # 单机启动的时候只用将 -bootstrap-expect  换成 -bootstrap      
          command: consul agent -bootstrap -server -data-dir=/usr/share/consul/data -client 0.0.0.0 -ui -node=dev1
networks:
  net-spring-db:   
    driver: bridge  
